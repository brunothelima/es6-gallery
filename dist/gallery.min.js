var Gallery =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/gallery.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/gallery.js":
/*!************************!*\
  !*** ./src/gallery.js ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/*eslint no-console: [\"error\", { allow: [\"warn\", \"error\"] }] */\n// import './gallery.scss';\n\n/*\n\tGallery Component;\n\tCreates an slider of elements with pagination and controlls\n*/\n/* harmony default export */ __webpack_exports__[\"default\"] = (class {\n  /*\n  \tGallery component contructor\n  \tInherit $element from Component class\n   */\n  constructor(target) {\n    this._curr = 0; // Current visible item index \n\n    this._items = []; // Itens to display iterable\n\n    this._bullets; // Will become gallery__index iterable\n\n    this.$lens; // Will become gallery__lens element reference\n\n    this.$controlls; // Will become gallery__controlls element reference\n\n    this.$prev; // Will become gallery__prev element reference\n\n    this.$next; // Will become gallery__next reference\n\n    this.$element = {}; // Target element\n\n    this.init(target);\n  }\n  /*\n  \tValidate the existence of the element and\n  \treturns the element reference\n  */\n\n\n  extractElement(target) {\n    try {\n      if (target instanceof HTMLElement) {\n        return target;\n      } else if ((typeof target === 'string' || target instanceof String) && target.match('(#|.).*')) {\n        // Checks if the element reference exists\n        if (document.querySelector(target)) {\n          return document.querySelector(target);\n        } else {\n          // Throw error if the selector match is undefined\n          throw `The selector '${target}' has no element match.`;\n        }\n      } else {\n        throw 'Invalid initialization selector/element';\n      }\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n  /*\n  \tGetter for total items entries\n  */\n\n\n  get total() {\n    return this._items.length;\n  }\n  /*\n  \tSets the current item to be displayed\n  \t@curr: Item index\n  */\n\n\n  set currentIndex(curr = 0) {\n    // Set the new value for _curr\n    this._curr = curr;\n    /*\n    \tRemove active class from all items\n    \tThen adds active class to the current item to be displayed\n    */\n\n    this._items.map(item => item.style.display = 'none');\n\n    this._items[this._curr].style.display = 'block';\n    /* \n    \tRemove active class from all bullets\n    \tThen adds active class to the current bullet to be hightlighted\n    */\n\n    this._bullets.map(item => item.disabled = false);\n\n    this._bullets[this._curr].disabled = true;\n  }\n  /*\n  \tSet the previews element to be displayed\n  \tUsed as callback for the galler__prev buttom @click event\n  */\n\n\n  prev() {\n    /*\n    \tIterates over _curr\n    \tReturns last _item index if _curr was the first item availble\n    */\n    this.currentIndex = this._curr <= 0 ? this.total - 1 : this._curr - 1;\n  }\n  /*\n  \tSet the selected element to be displayed\n  \tUsed as callback for the galler__index buttom @click event\n  */\n\n\n  goTo(index) {\n    this.currentIndex = index;\n  }\n  /*\n  \tSet the next element to be displayed\n  \tUsed as callback for the galler__prev buttom @click event\n  */\n\n\n  next() {\n    /*\n    \tIterates over _curr\n    \tReturns first _item index if _curr was the last item availble\n    */\n    this.currentIndex = this._curr >= this.total - 1 ? 0 : this._curr + 1;\n  } // Insert new elements to the $lens element\n\n\n  insert(elements = []) {\n    try {\n      // Grants that elements is an arrayh\n      elements = !Array.isArray(elements) ? [elements] : elements;\n\n      if (!elements.every(element => element instanceof HTMLElement)) {\n        throw 'The arguments passed for insert(elements) must be an HTMLElement object/list';\n      } // Append each element passed as argument to the $lens element\n\n\n      for (const element of elements) {\n        this.$lens.appendChild(element);\n      }\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n  /*\n  \tRender gallery__lens element into the component;\n  \tUpdate $lens reference\n  \tUpdate _items elements list\n  */\n\n\n  renderLens() {\n    // Remove the current rendered gallery__lens element\n    if (this.$lens) this.$lens.remove(); // Insert gallery__lens html into the component\n\n    this.$element.insertAdjacentHTML('afterbegin', `\n\t\t\t<div class=\"gallery__lens\">\n\t\t\t\t${this._items.map(item => {\n      /*\n      \tIteration over _items, render each item html into gallery__lens\n      \tRetrive innerHTML for allread rendered elements and outerHTML for new elements\n      */\n      const html = item.className.includes('gallery__item') ? item.innerHTML : item.outerHTML;\n      return `<div class=\"gallery__item\">${html}</div>`;\n    }).join('')}\n\t\t\t</div>`); // Set _lens reference to the new rendered gallery__lens\n\n    this.$lens = document.querySelector('.gallery__lens'); // Set _items as new gallery__items rendered\n\n    this._items = [...this.$lens.children];\n  }\n  /*\n  \tRender gallery__controlls element into the component;\n  \tBind events to the controll bullets\n  \tUpdate controll elements reference ($controlls, _bullets, $next, $prev)\n  \tSet observer for any changes on gallery__lens content\n  */\n\n\n  renderControlls() {\n    // Remove the current rendered gallery__controlls element\n    if (this.$controlls) this.$controlls.remove(); // Insert gallery__lens html into the component\n\n    this.$element.insertAdjacentHTML('beforeend', `\n\t\t\t<div class=\"gallery__controlls\">\n\t\t\t\t<button class=\"gallery__prev\">Prev</button>\n\t\t\t\t${this._items.map((item, index) => {\n      // Iteration over _items, renders bullets relative to gallery__index indexes\n      return `<button class=\"gallery__index\">${index + 1}</button>`;\n    }).join('')}\n\t\t\t\t<button class=\"gallery__next\">Next</button>\n\t\t\t</div>\n\t\t`); // Set _controlls as reference for the updated gallery__controlls element\n\n    this.$controlls = document.querySelector('.gallery__controlls'); // Extract $controlls buttons as iterable $controlls children.\n\n    this._bullets = [...this.$controlls.children]; // Remove gallery__prev button from _bullets iterable, Set $prev as the its reference\n\n    this.$prev = this._bullets.shift(); // Bind $prev click event to the prev() method\n\n    this.$prev.addEventListener('click', () => this.prev()); // Remove gallery__next button from _bullets iterable, Set $next as the its reference\n\n    this.$next = this._bullets.pop(); // Bind $next click event to the next() method\n\n    this.$next.addEventListener('click', () => this.next());\n    /*\n    \tIterates over _bullets;\n    \tBind click event for each bullet element\n    */\n\n    for (const [index, item] of this._bullets.entries()) {\n      item.addEventListener('click', () => this.goTo(index));\n    }\n    /*\n    \tSet _curr as the last active item before the render\n    \tReset _curr to the first item if item index is undefined\n    */\n\n\n    this.currentIndex = this._curr <= this.total - 1 ? this._curr : 0;\n    /*\n    \tObserver object for $lens element\n    \tUpdate the component html on any update on gallery__lens content\n    */\n\n    const mo = new MutationObserver((mutations, observer) => {\n      // Disconnects the observer to prevent infinite loop\n      observer.disconnect(); // Update _items with new/deleted content\n\n      this._items = [...this.$lens.children]; // Re-render the component view\n\n      this.render();\n    }); // Initialize $lens obervation\n\n    mo.observe(this.$lens, {\n      childList: true\n    });\n  }\n  /*\n  \tUpdates the component html\n  */\n\n\n  render() {\n    try {\n      // Checks if there is child elements for the gallery initialization\n      if (!this._items.length) {\n        throw `No child elements found on gallery instace $target.`;\n      }\n\n      this.renderLens(); // Render $lens element\n\n      this.renderControlls(); // Render $controlls element\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n  /*\n  \tInitializes _items\n  \tRender $lens and controlls \n  */\n\n\n  init(target) {\n    // Extracts element target form reference or selector passed as argument o new Gallery()\n    this.$element = this.extractElement(target); // Set _items with the inital child elements of target\n\n    this._items = [...this.$element.children] || false; // Remove all childs from target after assign then to _items\n\n    while (this.$element.firstChild) {\n      this.$element.removeChild(this.$element.firstChild);\n    } // Adds style and activation classes to the component\n    // this.$element.classList.add('gallery','gallery--active');\n    // Transfers the child components to gallery__lens wrapper\n\n\n    this.render();\n  }\n\n});\n\n//# sourceURL=webpack://Gallery/./src/gallery.js?");

/***/ })

/******/ })["default"];